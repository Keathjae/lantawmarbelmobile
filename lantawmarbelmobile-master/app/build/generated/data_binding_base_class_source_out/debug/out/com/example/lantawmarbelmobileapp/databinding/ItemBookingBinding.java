// Generated by view binder compiler. Do not edit!
package com.example.lantawmarbelmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lantawmarbelmobileapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBookingBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Button btnRequestService;

  @NonNull
  public final Button btnView;

  @NonNull
  public final TextView txtBookingID;

  @NonNull
  public final TextView txtDates;

  @NonNull
  public final TextView txtGuests;

  @NonNull
  public final TextView txtRooms;

  @NonNull
  public final TextView txtStatus;

  @NonNull
  public final TextView txtTotal;

  private ItemBookingBinding(@NonNull MaterialCardView rootView, @NonNull Button btnRequestService,
      @NonNull Button btnView, @NonNull TextView txtBookingID, @NonNull TextView txtDates,
      @NonNull TextView txtGuests, @NonNull TextView txtRooms, @NonNull TextView txtStatus,
      @NonNull TextView txtTotal) {
    this.rootView = rootView;
    this.btnRequestService = btnRequestService;
    this.btnView = btnView;
    this.txtBookingID = txtBookingID;
    this.txtDates = txtDates;
    this.txtGuests = txtGuests;
    this.txtRooms = txtRooms;
    this.txtStatus = txtStatus;
    this.txtTotal = txtTotal;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBookingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBookingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_booking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBookingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRequestService;
      Button btnRequestService = ViewBindings.findChildViewById(rootView, id);
      if (btnRequestService == null) {
        break missingId;
      }

      id = R.id.btnView;
      Button btnView = ViewBindings.findChildViewById(rootView, id);
      if (btnView == null) {
        break missingId;
      }

      id = R.id.txtBookingID;
      TextView txtBookingID = ViewBindings.findChildViewById(rootView, id);
      if (txtBookingID == null) {
        break missingId;
      }

      id = R.id.txtDates;
      TextView txtDates = ViewBindings.findChildViewById(rootView, id);
      if (txtDates == null) {
        break missingId;
      }

      id = R.id.txtGuests;
      TextView txtGuests = ViewBindings.findChildViewById(rootView, id);
      if (txtGuests == null) {
        break missingId;
      }

      id = R.id.txtRooms;
      TextView txtRooms = ViewBindings.findChildViewById(rootView, id);
      if (txtRooms == null) {
        break missingId;
      }

      id = R.id.txtStatus;
      TextView txtStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtStatus == null) {
        break missingId;
      }

      id = R.id.txtTotal;
      TextView txtTotal = ViewBindings.findChildViewById(rootView, id);
      if (txtTotal == null) {
        break missingId;
      }

      return new ItemBookingBinding((MaterialCardView) rootView, btnRequestService, btnView,
          txtBookingID, txtDates, txtGuests, txtRooms, txtStatus, txtTotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

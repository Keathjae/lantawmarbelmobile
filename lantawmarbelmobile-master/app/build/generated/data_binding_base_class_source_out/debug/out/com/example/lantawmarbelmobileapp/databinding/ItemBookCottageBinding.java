// Generated by view binder compiler. Do not edit!
package com.example.lantawmarbelmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lantawmarbelmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBookCottageBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CheckBox cottageCheckBox;

  @NonNull
  public final ImageView cottageImage;

  @NonNull
  public final TextView cottageName;

  @NonNull
  public final TextView cottagePrice;

  @NonNull
  public final TextView cottageStatus;

  @NonNull
  public final TextView cottageType;

  private ItemBookCottageBinding(@NonNull CardView rootView, @NonNull CheckBox cottageCheckBox,
      @NonNull ImageView cottageImage, @NonNull TextView cottageName,
      @NonNull TextView cottagePrice, @NonNull TextView cottageStatus,
      @NonNull TextView cottageType) {
    this.rootView = rootView;
    this.cottageCheckBox = cottageCheckBox;
    this.cottageImage = cottageImage;
    this.cottageName = cottageName;
    this.cottagePrice = cottagePrice;
    this.cottageStatus = cottageStatus;
    this.cottageType = cottageType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBookCottageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBookCottageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_book_cottage, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBookCottageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cottageCheckBox;
      CheckBox cottageCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (cottageCheckBox == null) {
        break missingId;
      }

      id = R.id.cottageImage;
      ImageView cottageImage = ViewBindings.findChildViewById(rootView, id);
      if (cottageImage == null) {
        break missingId;
      }

      id = R.id.cottageName;
      TextView cottageName = ViewBindings.findChildViewById(rootView, id);
      if (cottageName == null) {
        break missingId;
      }

      id = R.id.cottagePrice;
      TextView cottagePrice = ViewBindings.findChildViewById(rootView, id);
      if (cottagePrice == null) {
        break missingId;
      }

      id = R.id.cottageStatus;
      TextView cottageStatus = ViewBindings.findChildViewById(rootView, id);
      if (cottageStatus == null) {
        break missingId;
      }

      id = R.id.cottageType;
      TextView cottageType = ViewBindings.findChildViewById(rootView, id);
      if (cottageType == null) {
        break missingId;
      }

      return new ItemBookCottageBinding((CardView) rootView, cottageCheckBox, cottageImage,
          cottageName, cottagePrice, cottageStatus, cottageType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

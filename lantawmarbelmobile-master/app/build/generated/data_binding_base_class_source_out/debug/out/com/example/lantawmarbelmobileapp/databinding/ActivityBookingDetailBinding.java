// Generated by view binder compiler. Do not edit!
package com.example.lantawmarbelmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lantawmarbelmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookingDetailBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout containerDetail;

  @NonNull
  public final ScrollView scrollBookingDetail;

  @NonNull
  public final TextView txtBilling;

  @NonNull
  public final TextView txtBookingDates;

  @NonNull
  public final TextView txtBookingID;

  @NonNull
  public final TextView txtCottages;

  @NonNull
  public final TextView txtGuests;

  @NonNull
  public final TextView txtMenus;

  @NonNull
  public final TextView txtPayments;

  @NonNull
  public final TextView txtRooms;

  @NonNull
  public final TextView txtStatus;

  @NonNull
  public final TextView txtTotalPrice;

  private ActivityBookingDetailBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout containerDetail, @NonNull ScrollView scrollBookingDetail,
      @NonNull TextView txtBilling, @NonNull TextView txtBookingDates,
      @NonNull TextView txtBookingID, @NonNull TextView txtCottages, @NonNull TextView txtGuests,
      @NonNull TextView txtMenus, @NonNull TextView txtPayments, @NonNull TextView txtRooms,
      @NonNull TextView txtStatus, @NonNull TextView txtTotalPrice) {
    this.rootView = rootView;
    this.containerDetail = containerDetail;
    this.scrollBookingDetail = scrollBookingDetail;
    this.txtBilling = txtBilling;
    this.txtBookingDates = txtBookingDates;
    this.txtBookingID = txtBookingID;
    this.txtCottages = txtCottages;
    this.txtGuests = txtGuests;
    this.txtMenus = txtMenus;
    this.txtPayments = txtPayments;
    this.txtRooms = txtRooms;
    this.txtStatus = txtStatus;
    this.txtTotalPrice = txtTotalPrice;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookingDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookingDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_booking_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookingDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.containerDetail;
      LinearLayout containerDetail = ViewBindings.findChildViewById(rootView, id);
      if (containerDetail == null) {
        break missingId;
      }

      ScrollView scrollBookingDetail = (ScrollView) rootView;

      id = R.id.txtBilling;
      TextView txtBilling = ViewBindings.findChildViewById(rootView, id);
      if (txtBilling == null) {
        break missingId;
      }

      id = R.id.txtBookingDates;
      TextView txtBookingDates = ViewBindings.findChildViewById(rootView, id);
      if (txtBookingDates == null) {
        break missingId;
      }

      id = R.id.txtBookingID;
      TextView txtBookingID = ViewBindings.findChildViewById(rootView, id);
      if (txtBookingID == null) {
        break missingId;
      }

      id = R.id.txtCottages;
      TextView txtCottages = ViewBindings.findChildViewById(rootView, id);
      if (txtCottages == null) {
        break missingId;
      }

      id = R.id.txtGuests;
      TextView txtGuests = ViewBindings.findChildViewById(rootView, id);
      if (txtGuests == null) {
        break missingId;
      }

      id = R.id.txtMenus;
      TextView txtMenus = ViewBindings.findChildViewById(rootView, id);
      if (txtMenus == null) {
        break missingId;
      }

      id = R.id.txtPayments;
      TextView txtPayments = ViewBindings.findChildViewById(rootView, id);
      if (txtPayments == null) {
        break missingId;
      }

      id = R.id.txtRooms;
      TextView txtRooms = ViewBindings.findChildViewById(rootView, id);
      if (txtRooms == null) {
        break missingId;
      }

      id = R.id.txtStatus;
      TextView txtStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtStatus == null) {
        break missingId;
      }

      id = R.id.txtTotalPrice;
      TextView txtTotalPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalPrice == null) {
        break missingId;
      }

      return new ActivityBookingDetailBinding((ScrollView) rootView, containerDetail,
          scrollBookingDetail, txtBilling, txtBookingDates, txtBookingID, txtCottages, txtGuests,
          txtMenus, txtPayments, txtRooms, txtStatus, txtTotalPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.lantawmarbelmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lantawmarbelmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBookAmenitiesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView amenityAdultPrice;

  @NonNull
  public final CheckBox amenityCheckBox;

  @NonNull
  public final TextView amenityChildPrice;

  @NonNull
  public final TextView amenityDescription;

  @NonNull
  public final ImageView amenityImage;

  @NonNull
  public final TextView amenityName;

  private ItemBookAmenitiesBinding(@NonNull LinearLayout rootView,
      @NonNull TextView amenityAdultPrice, @NonNull CheckBox amenityCheckBox,
      @NonNull TextView amenityChildPrice, @NonNull TextView amenityDescription,
      @NonNull ImageView amenityImage, @NonNull TextView amenityName) {
    this.rootView = rootView;
    this.amenityAdultPrice = amenityAdultPrice;
    this.amenityCheckBox = amenityCheckBox;
    this.amenityChildPrice = amenityChildPrice;
    this.amenityDescription = amenityDescription;
    this.amenityImage = amenityImage;
    this.amenityName = amenityName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBookAmenitiesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBookAmenitiesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_book_amenities, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBookAmenitiesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amenityAdultPrice;
      TextView amenityAdultPrice = ViewBindings.findChildViewById(rootView, id);
      if (amenityAdultPrice == null) {
        break missingId;
      }

      id = R.id.amenityCheckBox;
      CheckBox amenityCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (amenityCheckBox == null) {
        break missingId;
      }

      id = R.id.amenityChildPrice;
      TextView amenityChildPrice = ViewBindings.findChildViewById(rootView, id);
      if (amenityChildPrice == null) {
        break missingId;
      }

      id = R.id.amenityDescription;
      TextView amenityDescription = ViewBindings.findChildViewById(rootView, id);
      if (amenityDescription == null) {
        break missingId;
      }

      id = R.id.amenityImage;
      ImageView amenityImage = ViewBindings.findChildViewById(rootView, id);
      if (amenityImage == null) {
        break missingId;
      }

      id = R.id.amenityName;
      TextView amenityName = ViewBindings.findChildViewById(rootView, id);
      if (amenityName == null) {
        break missingId;
      }

      return new ItemBookAmenitiesBinding((LinearLayout) rootView, amenityAdultPrice,
          amenityCheckBox, amenityChildPrice, amenityDescription, amenityImage, amenityName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
